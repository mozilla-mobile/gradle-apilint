/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

plugins {
    id 'com.gradle.plugin-publish' version '1.3.1'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
}

import org.mozilla.apilint.Config

buildDir = "${topobjdir}/apilint"

sourceSets {
    main {
        java {
            srcDirs 'src'
            srcDirs '../buildSrc'
        }
    }
}

group = Config.GROUP
version = 'master-SNAPSHOT'

gradlePlugin {
    website = 'https://github.com/mozilla-mobile/gradle-apilint'
    vcsUrl = 'https://github.com/mozilla-mobile/gradle-apilint'

    plugins {
        apilintPlugin {
            id = Config.GROUP
            displayName = 'API Lint plugin'
            description = 'Tracks the API of an Android library and helps maintain backward compatibility.'
            tags.set(['api', 'lint', 'mozilla', 'compatibility'])
            implementationClass = 'org.mozilla.apilint.ApiLintPlugin'
        }
    }
}

task testApiLint(type: Exec) {
    workingDir '.'
    commandLine 'python3', 'src/test/resources/apilint_test.py',
        '--build-dir', buildDir
}

task unittestApiLint(type: Exec) {
    workingDir '.'
    commandLine 'python3', 'src/test/resources/apilint_unittest.py'
}

task testChangelogCheck(type: Exec) {
    workingDir '.'
    commandLine 'python3', 'src/test/resources/changelog-check_test.py'
}

test.dependsOn unittestApiLint
test.dependsOn testApiLint
test.dependsOn testChangelogCheck

// Tests that the expected doclet result is understood by apilint.py
task integrationTestApiLint(type: Exec) {
    workingDir '.'
    commandLine 'python3', 'src/main/resources/apilint.py',
         '../apidoc-plugin/src/test/resources/expected-doclet-output.txt',
         '../apidoc-plugin/src/test/resources/expected-doclet-output.txt'
}

test.dependsOn integrationTestApiLint

apply plugin: 'java'

dependencies {
    implementation gradleApi()
    implementation localGroovy()
}
